{"version":3,"sources":["logo.svg","components/PictureCard/PictureCard.js","components/Wrapper/Wrapper.js","App.js","index.js"],"names":["module","exports","PictureCard","props","className","alt","name","src","image","onClick","clickPicture","id","Wrapper","loseWrapper","pictures","App","state","cards","clickedArray","topScore","score","message","lose","styleMe","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","logo","this","style","color","map","picture","key","Component","ReactDOM","render","document","getElementById"],"mappings":"ixEAAAA,EAAOC,QAAU,IAA0B,kC,kPCW5BC,G,YARK,SAAAC,GAAK,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,+BAA+BC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,kBAAMN,EAAMO,aAAaP,EAAMQ,WCDhHC,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAgC,SAApBD,EAAMU,YAAuB,cAAgB,WAAYV,EAAMW,Y,OCqF1FC,E,2MA/EbC,MAAQ,CACNC,QACAC,aAAc,GACdC,SAAU,EACVC,MAAO,EACPC,QAAS,GACTC,KAAM,QACNC,QAAS,S,EAEXb,aAAe,SAAAC,GAEb,IAAMa,EAAgB,EAAKC,aAAaR,GACxC,EAAKS,SAAS,CAACT,MAAOO,IAElB,EAAKR,MAAME,aAAaS,SAAShB,GACnC,EAAKe,SAAS,CACZN,MAAO,EACPF,aAAc,GACdG,QAAQ,qEACRC,KAAM,OACNC,QAAS,QAIX,EAAKG,SAAS,CACZR,aAAc,EAAKF,MAAME,aAAaU,OAAO,CAACjB,IAC9CS,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BC,QAAQ,WACRC,KAAM,QACNC,QAAS,UAIT,EAAKP,MAAMI,MAAQ,EAAKJ,MAAMG,UAChC,EAAKO,SAAS,CAAEP,SAAU,EAAKH,MAAMI,S,EAGzCK,aAAe,SAACI,GACZ,IAAK,IAAIC,EAAID,EAAcE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC/C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADK,EAER,CAACD,EAAcG,GAAIH,EAAcC,IAAvED,EAAcC,GAFgC,KAE5BD,EAAcG,GAFc,KAInD,OAAOH,G,wEAED,IAAD,OACP,OACE,yBAAKzB,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKG,IAAK6B,IAAMhC,UAAU,WAAWC,IAAI,SACzC,wBAAID,UAAU,aAAd,wBAEF,wBAAIA,UAAU,aACZ,kHACA,uBAAGA,UAAU,SAAQ,0CAAgBiC,KAAKrB,MAAMI,MAA3B,gBAA+CiB,KAAKrB,MAAMG,WAC/E,uBAAGmB,MAAO,CAACC,MAAOF,KAAKrB,MAAMO,SAAUnB,UAAU,WAAU,gCAASiC,KAAKrB,MAAMK,WAEjF,kBAAC,EAAD,CACAR,YAAewB,KAAKrB,MAAMM,KAC1BR,SACGuB,KAAKrB,MAAMC,MAAMuB,KAAI,SAAAC,GAAO,OAC3B,kBAAC,EAAD,CACE/B,aAAc,EAAKA,aACnBC,GAAI8B,EAAQ9B,GACZ+B,IAAKD,EAAQ9B,GACbL,KAAMmC,EAAQnC,KACdE,MAAOiC,EAAQjC,aAIrB,4BAAQJ,UAAU,UACpB,yBAAKA,UAAU,aACb,0BAAMA,UAAU,cAAhB,mC,GAzEUuC,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.83d9a31e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport \"./PictureCard.css\";\n\nconst PictureCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img className=\"img-thumbnail img-responsive\" alt={props.name} src={props.image} onClick={() => props.clickPicture(props.id)}/>\n    </div>\n  </div>\n);\n\nexport default PictureCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className= {props.loseWrapper===\"true\" ? \"wrapperLose\" : \"wrapper\"}>{props.pictures}</div>;\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  // Setting this.state.cards to the cards json array\n  state = {\n    cards,\n    clickedArray: [],\n    topScore: 0,\n    score: 0,\n    message: \"\",\n    lose: \"false\",\n    styleMe: \"white\"\n  };\n  clickPicture = id => {\n    // Randomly arrange the pictures\n    const shuffledArray = this.shuffleArray(cards);\n    this.setState({cards: shuffledArray});\n    // Sets score\n    if (this.state.clickedArray.includes(id)) {\n      this.setState({ \n        score: 0, \n        clickedArray: [], \n        message:\"You Clicked that before! Game Over! Click an image to start again!\", \n        lose: \"true\",\n        styleMe: \"red\"\n      });\n    }\n    else {\n      this.setState({\n        clickedArray: this.state.clickedArray.concat([id]),\n        score: this.state.score + 1,\n        message:\"Correct!\",\n        lose: \"false\",\n        styleMe: \"green\"\n      });\n    }\n    // Sets Top Score\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  }\n  shuffleArray = (picturesArray) => {\n      for (let i = picturesArray.length - 1; i > 0; i--) {\n          const j = Math.floor(Math.random() * (i + 1));\n          [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\n      }\n      return picturesArray;\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">React Clicky Game!!</h1>\n        </header>\n        <h3 className=\"App-intro\">\n          <strong>Click on a picture to earn points, but don't click any picture more than once!</strong> \n          <p className=\"score\"><strong>Score: {this.state.score} | TopScore: {this.state.topScore}</strong></p>\n          <p style={{color: this.state.styleMe}} className=\"message\"><strong>{this.state.message}</strong></p>\n        </h3>\n        <Wrapper\n        loseWrapper = {this.state.lose}\n        pictures=\n          {this.state.cards.map(picture => (\n            <PictureCard\n              clickPicture={this.clickPicture}\n              id={picture.id}\n              key={picture.id}\n              name={picture.name}\n              image={picture.image}\n            />\n          ))}\n        />\n        <footer className=\"footer\">\n      <div className=\"container\">\n        <span className=\"text-muted\">&copy;CarnesDev React app.</span>\n      </div>\n    </footer> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}